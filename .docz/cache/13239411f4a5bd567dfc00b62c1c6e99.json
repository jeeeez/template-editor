{"remainingRequest":"/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/jz/shuyun/template-editor/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js!/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage1/Usage1.mdx","dependencies":[{"path":"/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage1/Usage1.mdx","mtime":1564134425818},{"path":"/Users/jz/shuyun/template-editor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage1/Usage1.mdx"],"names":["React","mdx","Playground","ReactTemplateEditor","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","type","matchRegexp","className","text","Date","toLocaleDateString","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport {Playground} from 'docz';\nimport {ReactTemplateEditor} from './Usage1Demo.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"usage-1\"\n    }}>{`Usage 1`}</h1>\n    <h2 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h2>\n\n    <Playground __position={0} __code={'<ul>\\n  <li>\\n    When you type <b>{\\'{{nickname}}\\'}</b>, will be replaced with <b>Peter</b>\\n  </li>\\n  <li>\\n    When you type <b>{\\'{{product}}\\'}</b>, will be replaced with{\\' \\'}\\n    <b>Product Name</b>\\n  </li>\\n</ul>\\n<ReactTemplateEditor\\n  value=\\\"Dear {{nickname}}, you bought {{product}} at {{date}}\\\"\\n  placeholders={[\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(nickname)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: \\'Peter\\',\\n    },\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(product)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: \\'Product Name\\',\\n    },\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(date)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: new Date().toLocaleDateString(),\\n    },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ReactTemplateEditor\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSD2EDSVLBgH0sjPLshVQ9DZXaD0ZglbZXDSOBPUogRJDgARyGkU5WLyZiYAARkkABVCo0iErVSMoHACDgLBcIgwjNRok1NXaMFUF0FFjlOLDnAIRIsXYbh2GAdYogEZ5UCudoAAZ2CTGZFL3asGM7Ao7IAFhc9gADYXPaNyLDAYCADFvWgRI7P4ZxDgRB1MBgoR-CWIhqEoOAGIRYL1jCmhnAgLDLnYITvLc-QtJ0qYAEE5lM9gIyg8gbCgdAw1QjlTLEJroxkdgUWMmBuGAbDDOGuB5C3GtgFa6AOuCAAyJbxkSeZKGaeb2s67g9rlMBkMlAZUHadgAH4NgWsMI26q5tsW1AqurKQZCrN8zBhdVjhgMAwigKZbp6vqXvq5dqwTIiCBwcLMhSK8CBmmta1CKAkeR2soAgdGMfYAB1TZzFaKEjPmWsPDEYB2mAYBUFibZUG9GB5Hkdp5CkCmlhxBJ2ECCcYDJCVc3zPAqblZ7ceRxgKeg0cMg5nGaykLHFYTFWV1xgngmJtayelynqeAfsnFCSUWbZhWuegKBecpAW4IRHIRbFtmNYx_XoKEdBTamAA5JmFbd7d1YhpXJFRxXGChkiyNoCiXiFIP2FYeIGT4EBpNcI4abpnZGaPFmlh1rx0UIcyja9n2WZCSCxqyFn-CTwWEWGdqMjgUaAG0k4sCzQ8l3XSvaFP-lcDxfRCgeayiAhWrFNIsBmK5JAAPV4XgLI3iNc4ZpmuV4KqD8kSep56OC4Dgf2jzs8giHNbYYESEYhXQPL-8l2gsAIOzZdoAQ39PkoHu5lgEWFJkPEeEAx4T1AewGec8YALyXuwVe69N7AAjMbb2kp96H3kMfWB5Bz6XyZjfO-D8n4vwAafcY2Bv5yk9ibSU7Ar4wGoQPIB79kZ9xoYPOykDoFsJPlPeBeB54wmXmvDeaCIzoCyLg9e-DhEDyIf4Eh185S33vo_Z-AhX7KI_nQq4zoxhaiyLdOSlAAAypx4gwDMbQQy04Ui3QMcjThA8AC6EsMabhXFIKGMM4YIxmlIMG70zBfhADlJiLE2IJw4lxHiB5-ISWEmJNJUkZJyQUoBXQIEDBgTwt9IwIQ7BQzUvKM0fpHhZnwklUiEABBCCOEaWiPwiBNJaUpepUEY6CzjuxaibT3QehwB6Hp30oINFgkLVuU5hlujomMj0qhsA4Ffiqf0dM9ACD-olGZA47A8OTqnUqKJnFbIsM3GA8z25XBmQ7W5lA24CE7p4rZz0tJfXtIdbS3ZzDR1IgMmA8cIgCEwUch5jC7jdROTVdgnd8muDQBkMUYBPGNUCXkGAhlzGBPIKaWg6LGAAAlLB6isVqNgF5SL6AbByD8WkLDYrgKCsAYAtgEAjEDbgvUTkWARdkBJjUTFWGBXBQZCSIzItRQIdFHw-hhgIAAQiWAKmsaAXhQKgAANTOVcY2dwcApygAyAxNy7kCHuH2I5OBLUvKnHAFc8gmWh2FeCk8o59VmpgLdK5qEljvLdesLoBA-jmBjBwLoYBRqyudPK36aEhqwFGlBLweiMh2SEn5OALyuDsAAMSdlfqhaar1YxmGelEmJglWIeqFJxbikg1m4Hknk4C-gGDFPtI4TAeoulURGe0Dpg7_5bNqT2qYI7ASdOaY2rGHgASYDnS0j4F8_RdAAI6hCaX6mdK6x2SA7CcVAnFCUvKgJxPCWIL0JA8FnOAr4J2SDqd9A9jT50cRPdQc9QgEjXt_HAO9UAH3WvXU-rZU7zI_UgM6PUgJFkYQ9BlTAkz7TTLBUKHUMwAV2DQsO1Z4ZcCbNtFMnoRLcUMVQGKG5CNfaIYI0sj0hLxSOOo7Rp59HAR-h-QRVjWRnAcftkLbjyUmPIe-JRoT7hOOif0AxtDWytKfUXt9VRF9xWx1BUMvu6wZhvCxuQTgqAUTuARCqq4faYADq_TgLDAhlPVhqmiSUQoZXARRQmq45LKW0oRqSfoKdaB7FwydG1DQHM4bw3C5lNYEWoe6GZTAcGbOAmam7B1rybWUDC9QOA9qnlWudaHV1TnkYIqxs6PGmQ5gFEau0KrMAauzBmAUM6aBQt4YuuwFVKrct4ZwE1lrdWZzsCuKiBk5WawTFsDgNAZntJJYabZlpHmaBeYyOqt2iWDHDdq21mcBjgP_tA1nCasA7L5F_OwmspqGRXAG-F-bdMYjxB9QydgAAfL7cpNKlZDds5Gs2CtdBufq0e494D-pXCDobtgQKOD0DQewfgZx-rdRYL57kgtZHYFjFEdAkcFNR-4NIQMNWTuaBGFVcOnv5Y-MBU72RYuh1qWAgkL3FsIhwNQR8gQwpdFJ-j4KTUAD6IolitTJzAbqfKQFs9fRV_LLy_xQEoC46X6PFAS8xzWdn8W0dpA-OZ-cMPFc1jKyuWp2Pgec4WwQU3vPUCPi12kUXvL-Vuzh2Dp5EOoFQ7gOb9xevbe2rYHj33Qt_eCKD6z5Xpn-OUbkwiMT3Q0JmTp3l0z03BX5amAeUICNGpw4d0708WpTjB5rIXhGXqCC1QSHqLO2w484EF2eCUeAIxWV2PLjVFhe8fHJBCvXWPAd27m6eSwlAH6mYsR3rvEYIhz-BgPzg1OV_LVWlv1Acl1rdBWkOOfOAzMhaP7v0_jvaCFbmY6jIrOk6VdRSX2fdAr9ZHh86ANuMEVmeFNBFlI1FBE1lLngBNm_nvv_lMPID_hjEKhgIAXYGZCAaimARASfnQDkLAXFr_vnn2EVvfkcJnpAR_jflllOHAQnrpKItkB9stpfmfn-LQegPQbnvAfgVHo7HjLiI1AJsSiJqngpohudMAvwTACnnSjQIpn6hQVtnAtEK1HQWcksIwaiAUHdMAjynLl7lwhwYnrQl_I1HIUcEfiYfgP4DqCMKgDChkEZI-J_C-N1KIXobjMvgfptAQXfq8nJHQqZPtO0Bcu1j1uYY4eNl4S3EQb4V_D3ooZsKwWcoyuESwWwYQvgRpuostiYewGYYQT4X4HAFYTYQOHYYkK7sQqwq-CEXkVOMPmoqwuESOnfAIlDn6LwmGhGhRmxlRrJoIVIQQDIcvnQlLhUXvFQRjK6ubknLXseL3iRDEdAUgUsFgUsQrqfFwdkDwRMEnFbu_D4uPgGmHgZuPLECOAQDPnPnHmsfFvgbvjatZqtkKDgBcXQO8o1O8nAQijMZmJnvbonuXqOJXuQNXhYN8dDAqHgFYqihGE1mvm7M_s6C8aZiXn8dzn-KeFCYiZAUHjCS_v4CEKgIkByF_jAAxrdGPjWE1kiQVovq1MvpAcDHcfankN3rvoynAbscjB0QIOYHcYcXFscUZmcfQRTiuNybyaiY7ktvXkCRYqeCKaHgKYZqcWygQCKWgAZvQkETOPHjNpKQCdqFXsSaqeqagJqYqUDn2MqcZtQMLuTm7qVBGBqeEFcNqSkDoQSUSdcRznNmXtKXziOkbkIk1B6evg6cvpzvKWcuSRyRaesLUoKacQtnYU6WaS6YNOoTqdcQbl8acEXi6L8b6f8dKRXkaQGjmekX0HmsQXpIeMeKePYFWe5nrgbmCaGH0SKDLqmZqVLk2QIL2dakKC2a-s9NWkoNEoxHWvEuCk2jxK2hsjkh2sjoUuBPUg8WOpUqOl-n6KpvUmgH_Pst0I8t4QsicqIuIovFcPPGeIvAGjpPmReTMOdFeYgjeTMAGuAq6ZmSkB-XQs-Rmc4t9k1BGKwF-c4h6W6Xrhkawv-W6Z8ips6GpvaPuRkIeY0FFtnscusFqm9nqgagBQUAGiYRFrMpEa8h8esPtq1gUP-V4Kru4Hecnn0WnudJgjUVmo0KRc8q8ksPdjALBd-UsM6QQAJeBT5hSlYjJqgP5voPBdspgKol0GfGolpiCg5tcS5j7O5vGhxb5lYjJTQEsPTqZg8hhTFtNomcZn6QiFZoCI8QIPZuxBZdaWcdSbdLZf2mOs8ZARRZaZZcKdGRyGBYRUqSccZiadGXxcFTqVcKwJQFwM5WFXsKgHaX6g6VcN2emZBcDEiEFcnPFegHJTWpOXEg2oks2oloudoPkl2kUspOuV-pubOmOuhgRMeWRQshJrRERmoBsjudsihXskLI0AhpgEjpALOCcsRdCuxW8h8lWlpLAFMFQMhH_I1PZE5nxoaEdACrBqiqNWldQBNQ8gdeNRAO6RpfgfnMtsUP0pKjAOaA5uaAACTAAADUb1K1uy8gL1wADif4qAowt08gxQ02DVa6KW-16W11SwnuCuK4fyx0zIu-14FIEYFy4oRAHlNmXlTiBQTimNSwTBVwuV3pNYTBJJjU6NqImNZSnpxJTWOomQRCauqK4xguTUCK2RnhugE1t-HV7cupuMEA1OGN3oOAoibFJ5GQEtcRj5Swf0UAbKSRemrhhYBh95R4j5xhs1jOpmD5iCMI32v25h55htt5Yh-BLBjUYtRAsts83emtEh5tMwFJuMFN2RZkJh4xyMFNKRZyjULBncQk81at4pER3FtR4CPtqEbsYevtNN4tiF3KE-GM4dqAqMUAHJuB_M4aPJZNFg0BeKtAopeh4dUEu-xUpUKNFIUunaX8ximdqE4xnC3ukB1NpoRARN1-pUpN6-FgItTUFNldJU_hJBc-qNbKORq0ttOAbGMmCI5JBdGMHts1jUyEkNzohVwCftcRyhvq694YqW29Ydo4nRGdCQMd8d-hukKay2w9kBVdHdhNGZ8i7BXJZ9-dd9LdLqhxeu6dTMRV45tapV7Es5Um3RUlkhaeVVFAnaoEIAZgxgpg5gpS9glG7AxQ2U7gxQhoVEXFwwCyLA2UcEiQRQpSAAAgxJkLKGgAmnpQRTOOQ-wFQ1nN6MpRfA0W6eQ7yIhfUojbteIVA8xcIZgKmfQxJdFSkCMfUaQowxdfCvgc9dg-YMlnmXXuIQZdyoEdRs-usMo9Ri9hI5So1HQxkHpQGoPTKqMUeELewAY-4HURfFCSiDgCetY7I7Y_ydWOHQ46gEA8oCA3-JoNQEuQUgwCcvwNdfwFcPwD8MWNUBkOaD-GSIyCAJPPwKwO3CdDE-wPwPZDgAU_ZGlOsPwOUIShANnrk_wLVINDet0Ck7AD9GSJQIkLmHkPVqaJKOaPE38KWCU9WPwFEGgNUyoMRv-M6uk6UyAJgPMOGNpBAPALkxqmU_pKMyvEJDgAAEyFMDPIz8BdOiBIB5MgAbP-Q4AAAcOA_kezNYcTzVX66zAArDgN5Fc8U1M6HAc5qJaJEOs0JOc1czc4g9WKOVEgk94HrXzSE6gGE7VSABZCALQNpjE3E5RuaIc-aK1vwPIAoCzEAA`} mdxType=\"Playground\">\n  <ul>\n    <li>When you type <b>{'{{nickname}}'}</b>, will be replaced with <b>Peter</b></li>\n    <li>When you type <b>{'{{product}}'}</b>, will be replaced with <b>Product Name</b></li>\n  </ul>\n  <ReactTemplateEditor value='Dear {{nickname}}, you bought {{product}} at {{date}}' placeholders={[{\n        type: 'variable',\n        matchRegexp: /^\\{\\{(nickname)\\}\\}/,\n        className: 'cm-keyword',\n        text: 'Peter'\n      }, {\n        type: 'variable',\n        matchRegexp: /^\\{\\{(product)\\}\\}/,\n        className: 'cm-keyword',\n        text: 'Product Name'\n      }, {\n        type: 'variable',\n        matchRegexp: /^\\{\\{(date)\\}\\}/,\n        className: 'cm-keyword',\n        text: new Date().toLocaleDateString()\n      }]} mdxType=\"ReactTemplateEditor\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-code\"\n    }}>{`Basic Code`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { TemplateEditor } from 'template-editor';\n\nconst container = document.getElementById('root');\n\nconst editor = new TemplateEditor(container, {\n  initialValue: 'Dear {{nickname}}...',\n  placeholders: [\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(nickname)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: 'nickname'\n    },\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(product)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: 'product'\n    },\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(date)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: new Date().toLocaleDateString()\n    }\n  ]\n});\n\neditor.onChange = (inpput: string)=>{\n  console.log(input);\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}