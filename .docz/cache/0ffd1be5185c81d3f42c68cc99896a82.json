{"remainingRequest":"/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/jz/shuyun/template-editor/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js!/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage2/index.mdx","dependencies":[{"path":"/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage2/index.mdx","mtime":1564135162380},{"path":"/Users/jz/shuyun/template-editor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage2/index.mdx"],"names":["React","mdx","Playground","ReactTemplateEditor","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","type","matchRegexp","className","text","Date","toLocaleDateString","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport {Playground} from 'docz';\nimport {ReactTemplateEditor} from './Usage1Demo.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"usage-1\"\n    }}>{`Usage 1`}</h1>\n    <h2 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h2>\n\n    <Playground __position={0} __code={'<ul>\\n  <li>\\n    When you type <b>{\\'{{nickname}}\\'}</b>, will be replaced with <b>Peter</b>\\n  </li>\\n  <li>\\n    When you type <b>{\\'{{product}}\\'}</b>, will be replaced with{\\' \\'}\\n    <b>Product Name</b>\\n  </li>\\n</ul>\\n<ReactTemplateEditor\\n  value=\\\"Dear {{nickname}}, you bought {{product}} at {{date}}\\\"\\n  placeholders={[\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(nickname)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: \\'Peter\\',\\n    },\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(product)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: \\'Product Name\\',\\n    },\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(date)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: new Date().toLocaleDateString(),\\n    },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ReactTemplateEditor\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSD2EDSVLBgH0sjPLshVQ9DZXaD0ZglbZXDSOBPUogRJDgARyGkU5WLyZiYAAJkkABVCo0gARi1UjKBwAg4CwXCIMIzUaJNTV2jBVBdBRY5Tiw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmJS92rBjOwKeyABZXPYAA2Vz2nciwwGAgAxb1oESez-GcQ4EQdTAYKEfgliIahKDgBiERC9ZwpoZwICwy52Eknz3PkbTdKmABBOYzPYCMoPIGwoHQMNUI5MyxGa6MZHYFETJgbhgGwoyRrgeQtxrYA2ugTrggAMmW8ZEnmShmgWjquu4fa5TAZDJQGVB2nYAB-DZFrDCMequHaltQarqykGQqzfMwYXVY4YDAMIoCmO7ev616GuXasEyIggcAizIUivAhZprWtQigZGUdrKAIAxzH2AAdU2cxWihYz5lrDwxGAdpgGAVBYm2VBvRgeR5HaeQpEppYcQSdhAgnGAyQlXN8zwam5RevGUcYSnoNHDJOdxmspGxpWE1Vlc8cJ4ISfW8mZapmngH7JxQklVn2cV7noCgPnKUFuCERyUXxfZzXMYN6ChHQM2pgAOWZxX3e3DXIeVyQ0aVxhoZIsjaAol4hWD9hWHiBk-BAGTXCOWn6Z2Jmj1ZpZda8dFCAs43vd91mQkg8aslZ_hk6FhFhg6jI4DGgBtZOLEssOpb1sr2lT_pXA8X1QsHmsogINqxTSLAZiuSQAD1eF4SzN4jPPGeZrleGqw_JCn6eejguA4ADo97PIIhzW2GBEhGIV0HygepdoLACHsuXaAEd-Z8lC9wsiAiwZNh6jwgOPSeYD2Cz3njARey92Brw3lvYAEYTY-0lAfI-8gT5wPIBfK-zNb730fs_V-gCz7jGwD_OUXtTaSnYNfGANDB7AI_ijfutCh72SgTA9hp9p4ILwAvGEK916b3QRGdAWQ8EbwISIwexD_CkJvnKO-D8n4vwEG_FRn96FXGdGMLUWQ7ryUoAAGVOPEGA5jaBGWnCkO6hiUZcMHgAXUlpjTcK4pDQ1hvDRGs0pDgw-mYL8IBcpMRYmxROHEuI8QPPxCSwkxLpOkrJeSilAK6BAgYMCeEfpGBCHYaG6l5Rmj9I8LM-FkqkQgAIIQRwjS0R-EQZprTlINKgrHIW8d2LUXae6D0OAPS9J-lBBosFhZtynCMt0dFxkelUNgHAb8VT-npnoAQ_0kqzIHHYXhKc05lRRC47ZFgW4wAWR3K4szHZ3MoO3AQXcvHbJetpb69ojo6W7OYGOpFBkwAThEAQWDjmPKYXcHqpzarsC7gU1waAMhijAF4pqQS8gwCMhYoJ5BTS0AxYwAAEpYPU1itRsAvKRfQDYOQfm0hYHFcAwVgDAFsAgEZgbcD6qciwiLsiJKaqYqwIK4JDMSRGFFaKBAYo-H0MMBAACESxBU1jQC8aBUAABq5yrgmzuDgVOUAGSGNufcgQ9w-zHJwFa15U44ArnkMysOIqIUnlHAa81MA7rXNQksD57r1hdAIH0cwMYOBdDAGNOVzoFV_TQsNWAY0oJeH0Rkeykl_JwFeVwdgABiTsb9UIzTerGMwL1omxMEqxT1QpOLcUkOs3ACl8nAX0AwEp9pHCYD1N0qioz2idKHQA7ZdTe1TFHYCLpLSm3Yw8ACTA87WkfEvn6LoABHUIzT_WztXeOyQHYTioE4kS15UBOJ4SxJehIHhs5wFfJOyQ9SfqHqaQujip7qAXqEAkG9v44D3qgI-m1G7n3bOnRZX6kBnR6kBEsjCHpMqYCmfaGZ4KhQ6hmICuwaER1rPDLgLZtppk9GJXihiqAxS3MRn7JDhHlkeiJeKJxNG6PPIY4CP0vyCJsayM4TjDthY8ZSsxlD3wqPCfcFxsT-hGPoe2dpL6S8fpqMvhKuOYLhn93WDMN42NyCcFQCidwCJVVXH7TAQd36cDYYECp6stU0SSiFLK4CqLE1XApVSuliNST9FTrQPYeHTq2oaI53D-H4UsprIitD3RzKYHg7ZwELV3aOrebayg4XqBwAdc861Lqw5uucyjRF2NnT40yHMAoTV2jVZgLV2YMwCjnTQGF_Dl12CqtVXl_DOBmutfqzOdgVxUQMgqzWCYtgcBoHMzpZLjS7OtM8zQbzGQNXuyS4YkbdX2szkMSBgDYHs6TVgPZfIv4OE1jNQyK4g2IsLfpjEeIvqGTsAAD7fblFpMroadkozm4VrotyDVjwnvAANK5QfDdsCBRwegaD2D8DOf17qLDfI8sFrI7BsYojoMjwpaP3BpGBpqqdzQIyqvh89grHxgJneyHFsOdTwEEle0thEOBqCPkCOFLoZOMchWagAfRFEsNq5OYA9X5aA9nb7KsFdeX-KAlBXEy4x4oSXWOawc4S-jtIHwLPzlh0rms5WVx1JxyDrni2CBm756gR82u0hi75QK928PwfPMh9A6HcALceP13bu1bB8d--FgHoRwe2cq7MwJqj8mETie6Ghcy9P8tmZm0KgrUwDyhERk1eHjvneni1KcEPNYi-I29QQOqCQ9TZ22PHnAQuzwSjwBGayuwFeaosH3j45JIX6-x0D-383TyWEoI_MzljO_d4jBEefINB-cBp6vlaa1t-oHkhtboq0hzz5wOZ0Lx-99n6d7QIr8ynUZDZ8nKraLS9z7oNfrICPnSBrxoi8zwo0E2UTUUEzW0ueAk27---ABUw8gv-mMwqGAQBdg5koBaK4BkBp-dAOQcB8Wf-BefYxWD-RwWeUBn-t-2WU48BieekYi2Qn2K2V-5-f4dB6ADBeeCBBB0eTs-MuITUgmJKomaeimSGF0ICAhMAqe9KNASm_qlB228C0QbU9B5ySwTBqIBQ90ICvK8u3u3CnBSedC38TU8hRwx-ph-A_gOoIwqAsKGQxkj4X8L4PUYh-heMK-h-W0hB9-by8k9CZkB07QlyHWvWFhThE23hrcxBfh38veShmwbB5yTKERrB7BRCBBmmGiK2ph7A5hRBvhfgcA1hthA49hiQbuJCbCr4oR-RU4I-6ibCERo698gi0OfofC4akalG7G1GcmQh0hBAshK-9C0ulR-81BmMbqFuycdex4feJEsRMByBSw2ByxiuZ83B2QvBEwyc1uH8viE-ga4ehmE8sQI4BAs-8-8e6xCWBBe-tqNma2QoOAlxdAHyTUHy8BiKsxmYWeDuSeFeo4Ve5ANeFgPxMMCoeA1iaKEYzW6-7sL-zorxZmpe_xPOf4p40JSJUBwesJr-_gIQqAiQHI3-MAjGd04-NYzWyJhWS-bUK-UBIM9xDqeQPee-TK8BexKMnRAg5g9xRx8WJxxm5xDBlOK4PJfJaJTuy2DewJlip4opYegpRmZx7KBAopaAhmDCwRM4Ces2UpgJ2o1eJJapGpqAWpSpwOfYKpJm1AIuFO7uZUEYmp4QVwOpKQuhhJxJNxnO825eMp_Oo6xuwizUnpG-jpK-XOCp5yFJnJlp6wdSQpZxi29hzp5prpQ0GhupNxhu3xpwxeLofxfpAJMplexpgauZGRfQ-aJB-kh4x4p49g1ZHm-uhu4JoY_RIosuaZWp0uzZAgfZNqQorZb6L0NaSgMSjE9aCSEKzaPEbamyuSnaKORS4EDSjx46VSY636foamDSaA_8By3QTyPhiypyYiEiS8VwC8Z4S8gaukBZl5MwF015SCt5MwgaECbpWZKQn59CL5mZLiP2zUEYrA35Linp7p-umRbCAF7pXyqmzo6m9oB5GQR5jQ0WOeJy6w2q72-qhqgFBQgaphkWcyURbynx6wB2bWBQAFXgau7g95Ke_R6eF0WCtR2ajQZFLybySwD2MAcFP5SwLpBAglEFvmlK1ismqAAW-gCFOymAaiXQ586i2moKjmNxrmvsHmCanFfm1islNASwDOZmjymFsWM2SZJm_pCI1mgITxAgDm7EllNp5xNJd0dlA646LxUBlFVpVlIpMZHI4FRFyppxJmppMZ_FIVupVwrAlAXALl4VewqA9p_qjpVwPZGZUFIMSIwVKcCV6A8ltaU58SjaSSLaSWS52gBS3axSKkG536W5c646GGBEJ55FiykmtExGagmyu5OyqF-ywsjQiGmAyOkAs4pyJFMKHF7yny1a2ksAUwVAyE_8TUDkzm_Ghox0gKcGaKY16V1Ak1jyh1E1EAHpmlBBBcK2xQAyUqMA5ojm5oAAJMAAANTvWrV7LyCvXACOJ_ioCjB3TyDFAzaNXrqpYHUZY3VLBe6K4rj_InTMh77XgUgRiXLihECeW2beXOIFDOJY1LDMFXB5U-k1jMGklNQY2ohY3lJekknNY6iZDELq5ooTFC7NSIo5FeG6CTV36dUdx6l4wQA06Y3eg4BiLsWnkZCS3xFPlLD_RQDsrJH6ZuGFiGEPlHhPkmFzVM5maPlIIwg_Z_YWEXlG13niEEGsFNTi1EBy1zw95a2SEW0zCUl4yU05HmSmETEoyU2pHnJNSsFdySQLXq0SmRE8V1EQK-2oTuzh5-200S1IU8qT6YwR2oBoxQCcl4ECwRq8nk0WAwH4q0Bin6ER1QR74lRlSo0UjS5drfwmJZ2oQTFcI-5QE02mhEDE035lRk0b4WCi3NSU1V2lQBGkHz5o3sq5FrR204DsayYIgUmF2Yye1zVNTIRQ3OhFUgL-3xEqF-ob3hhpY73h2jhdGZ0JCx0J0GF6SporYj1QHV2d1E2ZkKIcHcnn0F332t2upHH64Z3MzFUTl1plXsRznSY9HSVSHp7VUUBdqgQgBmDGCmDmBlL2BUbsDFA5TuDFCGhUTcXDCLIsA5RwSJBFBlIAACDEmQsoaAia-lhFM4FD7A1D2c3oKll8jR7pFDvISFDSSNe1Eh0DLFIhmAaZDDklMVKQoxDRZCTDl1CKBBL1OD5gKW-Z9eEhhlPKQRNGL66wKjNGr2kjVKTU9DGQ-lgaQ9sqYxR4wt7Ahj7g9Rl80JKIOAp6NjcjdjAp1YEdjjqAwDygoDf4mg1Ay5hSDApy_AN1_AVw_APwxY1QGQ5oP4ZIjIIAU8_ArAHcp0sT7A_ADkOAhTDk6U6w_A5QRKEAOeeT_AdUQ0t63QqTsAv0ZIlAiQuYeQDWpoko5oCTfwpYpT1Y_AUQaANTKgJG_4LqGTZTIAmA8w4YOkEA8AeTmq5TBkYzq8kkOAQkRTgzKM_A3TogSA-TIAmzAUOAAAHDgAFHszWPEy1d-hswAKw4A-RXMlPTNhwHOaiWiRAbOSTnNXM3NIPVhjnRKJPeD6382hOoDhN1UgCWQgC0A6axPxNUbmiHPmhtb8DyAKCsxAA`} mdxType=\"Playground\">\n  <ul>\n    <li>When you type <b>{'{{nickname}}'}</b>, will be replaced with <b>Peter</b></li>\n    <li>When you type <b>{'{{product}}'}</b>, will be replaced with <b>Product Name</b></li>\n  </ul>\n  <ReactTemplateEditor value='Dear {{nickname}}, you bought {{product}} at {{date}}' placeholders={[{\n        type: 'variable',\n        matchRegexp: /^\\{\\{(nickname)\\}\\}/,\n        className: 'cm-keyword',\n        text: 'Peter'\n      }, {\n        type: 'variable',\n        matchRegexp: /^\\{\\{(product)\\}\\}/,\n        className: 'cm-keyword',\n        text: 'Product Name'\n      }, {\n        type: 'variable',\n        matchRegexp: /^\\{\\{(date)\\}\\}/,\n        className: 'cm-keyword',\n        text: new Date().toLocaleDateString()\n      }]} mdxType=\"ReactTemplateEditor\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-code\"\n    }}>{`Basic Code`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { TemplateEditor } from 'template-editor';\n\nconst container = document.getElementById('root');\n\nconst editor = new TemplateEditor(container, {\n  initialValue: 'Dear {{nickname}}...',\n  placeholders: [\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(nickname)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: 'nickname'\n    },\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(product)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: 'product'\n    },\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(date)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: new Date().toLocaleDateString()\n    }\n  ]\n});\n\neditor.onChange = (inpput: string)=>{\n  console.log(input);\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}