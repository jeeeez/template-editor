{"remainingRequest":"/Users/jz/shuyun/template-editor/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js!/Users/jz/shuyun/template-editor/packages/editor/src/mode.ts","dependencies":[{"path":"/Users/jz/shuyun/template-editor/packages/editor/src/mode.ts","mtime":1564132927918},{"path":"/Users/jz/shuyun/template-editor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IENvZGVNaXJyb3IgZnJvbSAnY29kZW1pcnJvcic7CnZhciBjb3VudGVyID0gMDsKZXhwb3J0IGZ1bmN0aW9uIGRlZmluZU1vZGUoY29uZmlnKSB7CiAgdmFyIG5hbWUgPSAiVGVtcGxhdGUtRWRpdG9yLSIuY29uY2F0KCsrY291bnRlciwgIi0iKS5jb25jYXQoRGF0ZS5ub3coKSk7CiAgQ29kZU1pcnJvci5kZWZpbmVNb2RlKG5hbWUsIGZ1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIHRva2VuQmFzZShzdHJlYW0sIHN0YXRlKSB7CiAgICAgIHN0YXRlLmxpbmUgPSBzdHJlYW0ubGluZU9yYWNsZS5saW5lOwogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGNvbmZpZy5wbGFjZWhvbGRlcnNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgICAgICB2YXIgcGxhY2Vob2xkZXIgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICBpZiAoc3RyZWFtLm1hdGNoKHBsYWNlaG9sZGVyLm1hdGNoUmVnZXhwLCBmYWxzZSkpIHsKICAgICAgICAgICAgdmFyIGNvbnN1bWVSZWdleHAgPSBwbGFjZWhvbGRlci5jb25zdW1lUmVnZXhwIHx8IHBsYWNlaG9sZGVyLm1hdGNoUmVnZXhwOwogICAgICAgICAgICB2YXIgbWF0Y2hlZCA9IHN0cmVhbS5tYXRjaChjb25zdW1lUmVnZXhwKTsKICAgICAgICAgICAgc3RhdGUucGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlcjsKICAgICAgICAgICAgc3RhdGUubWF0Y2hlZFZhbHVlID0gbWF0Y2hlZFsxXTsKICAgICAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyLnR5cGU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3JbInJldHVybiJdICE9IG51bGwpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yWyJyZXR1cm4iXSgpOwogICAgICAgICAgfQogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHsKICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBzdHJlYW0ubmV4dCgpOwogICAgICByZXR1cm4gbnVsbDsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBzdGFydFN0YXRlOiBmdW5jdGlvbiBzdGFydFN0YXRlKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB0b2tlbml6ZTogdG9rZW5CYXNlLAogICAgICAgICAgY29udGV4dDogbnVsbAogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHRva2VuOiBmdW5jdGlvbiB0b2tlbihzdHJlYW0sIHN0YXRlKSB7CiAgICAgICAgaWYgKHN0YXRlLnRva2VuaXplID09PSB0b2tlbkJhc2UgJiYgc3RyZWFtLmVhdFNwYWNlKCkpIHsKICAgICAgICAgIHN0YXRlLnBsYWNlaG9sZGVyID0gdW5kZWZpbmVkOwogICAgICAgICAgc3RhdGUubWF0Y2hlZFZhbHVlID0gdW5kZWZpbmVkOwogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQoKICAgICAgICB2YXIgc3R5bGUgPSBzdGF0ZS50b2tlbml6ZShzdHJlYW0sIHN0YXRlKTsKICAgICAgICByZXR1cm4gc3R5bGU7CiAgICAgIH0KICAgIH07CiAgfSk7CiAgcmV0dXJuIG5hbWU7Cn0KCmlmICh0eXBlb2YgZGVmaW5lTW9kZSAhPT0gJ3VuZGVmaW5lZCcgJiYgZGVmaW5lTW9kZSAmJiBkZWZpbmVNb2RlID09PSBPYmplY3QoZGVmaW5lTW9kZSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShkZWZpbmVNb2RlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkZWZpbmVNb2RlLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiZGVmaW5lTW9kZSIsCiAgICAgIGZpbGVuYW1lOiAicGFja2FnZXMvZWRpdG9yL3NyYy9tb2RlLnRzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGNvdW50ZXIsICJjb3VudGVyIiwgIi9Vc2Vycy9qei9zaHV5dW4vdGVtcGxhdGUtZWRpdG9yL3BhY2thZ2VzL2VkaXRvci9zcmMvbW9kZS50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGRlZmluZU1vZGUsICJkZWZpbmVNb2RlIiwgIi9Vc2Vycy9qei9zaHV5dW4vdGVtcGxhdGUtZWRpdG9yL3BhY2thZ2VzL2VkaXRvci9zcmMvbW9kZS50cyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/jz/shuyun/template-editor/packages/editor/src/mode.ts"],"names":["CodeMirror","counter","defineMode","config","name","Date","now","tokenBase","stream","state","line","lineOracle","placeholders","placeholder","match","matchRegexp","consumeRegexp","matched","matchedValue","type","next","startState","tokenize","context","token","eatSpace","undefined","style"],"mappings":";;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAQA,IAAIC,OAAO,GAAG,CAAd;AAEA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAAyC;AAC9C,MAAMC,IAAI,6BAAsB,EAAEH,OAAxB,cAAmCI,IAAI,CAACC,GAAL,EAAnC,CAAV;AAEAN,EAAAA,UAAU,CAACE,UAAX,CAAsBE,IAAtB,EAA4B,YAAM;AAEhC,aAASG,SAAT,CAAmBC,MAAnB,EAAoDC,KAApD,EAAgE;AAC9DA,MAAAA,KAAK,CAACC,IAAN,GAAcF,MAAD,CAAgBG,UAAhB,CAA2BD,IAAxC;AAD8D;AAAA;AAAA;;AAAA;AAE9D,6BAA0BP,MAAM,CAACS,YAAjC,8HAA+C;AAAA,cAApCC,WAAoC;;AAC7C,cAAIL,MAAM,CAACM,KAAP,CAAaD,WAAW,CAACE,WAAzB,EAAsC,KAAtC,CAAJ,EAAkD;AAEhD,gBAAMC,aAAa,GAAGH,WAAW,CAACG,aAAZ,IAA6BH,WAAW,CAACE,WAA/D;AACA,gBAAME,OAAO,GAAGT,MAAM,CAACM,KAAP,CAAaE,aAAb,CAAhB;AACAP,YAAAA,KAAK,CAACI,WAAN,GAAoBA,WAApB;AACAJ,YAAAA,KAAK,CAACS,YAAN,GAAqBD,OAAO,CAAC,CAAD,CAA5B;AACA,mBAAOJ,WAAW,CAACM,IAAnB;AACD;AACF;AAX6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa9DX,MAAAA,MAAM,CAACY,IAAP;AAEA,aAAO,IAAP;AACD;;AAED,WAAO;AACLC,MAAAA,UADK,wBACQ;AACX,eAAO;AAAEC,UAAAA,QAAQ,EAAEf,SAAZ;AAAuBgB,UAAAA,OAAO,EAAE;AAAhC,SAAP;AACD,OAHI;AAKLC,MAAAA,KALK,iBAKChB,MALD,EAKSC,KALT,EAKqB;AACxB,YAAIA,KAAK,CAACa,QAAN,KAAmBf,SAAnB,IAAgCC,MAAM,CAACiB,QAAP,EAApC,EAAuD;AACrDhB,UAAAA,KAAK,CAACI,WAAN,GAAoBa,SAApB;AACAjB,UAAAA,KAAK,CAACS,YAAN,GAAqBQ,SAArB;AACA,iBAAO,IAAP;AACD;;AAED,YAAMC,KAAK,GAAGlB,KAAK,CAACa,QAAN,CAAed,MAAf,EAAuBC,KAAvB,CAAd;AAEA,eAAOkB,KAAP;AACD;AAfI,KAAP;AAiBD,GArCD;AAsCA,SAAOvB,IAAP;AACD;;;;;;;;;;;;;;;;;;;;;;0BA5CGH,O;0BAEYC,U","sourcesContent":["import CodeMirror from 'codemirror';\nimport { IPlaceholder } from './index.d';\n\n\ninterface IModeConfig {\n  placeholders: IPlaceholder[];\n}\n\nlet counter = 0;\n\nexport function defineMode(config: IModeConfig) {\n  const name = `Template-Editor-${++counter}-${Date.now()}`;\n\n  CodeMirror.defineMode(name, () => {\n\n    function tokenBase(stream: CodeMirror.StringStream, state: any) {\n      state.line = (stream as any).lineOracle.line;\n      for (const placeholder of config.placeholders) {\n        if (stream.match(placeholder.matchRegexp, false)) {\n\n          const consumeRegexp = placeholder.consumeRegexp || placeholder.matchRegexp;\n          const matched = stream.match(consumeRegexp);\n          state.placeholder = placeholder;\n          state.matchedValue = matched[1];\n          return placeholder.type;\n        }\n      }\n\n      stream.next();\n\n      return null;\n    }\n\n    return {\n      startState() {\n        return { tokenize: tokenBase, context: null };\n      },\n\n      token(stream, state: any) {\n        if (state.tokenize === tokenBase && stream.eatSpace()) {\n          state.placeholder = undefined;\n          state.matchedValue = undefined;\n          return null;\n        }\n\n        const style = state.tokenize(stream, state);\n\n        return style;\n      }\n    };\n  });\n  return name;\n}\n"]}]}