{"remainingRequest":"/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/jz/shuyun/template-editor/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js!/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage1 copy/Usage1.mdx","dependencies":[{"path":"/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage1 copy/Usage1.mdx","mtime":1564135148962},{"path":"/Users/jz/shuyun/template-editor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/jz/shuyun/template-editor/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jz/shuyun/template-editor/packages/editor/src/docs/usage1 copy/Usage1.mdx"],"names":["React","mdx","Playground","ReactTemplateEditor","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","type","matchRegexp","className","text","Date","toLocaleDateString","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport {Playground} from 'docz';\nimport {ReactTemplateEditor} from './Usage1Demo.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"usage-1\"\n    }}>{`Usage 1`}</h1>\n    <h2 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h2>\n\n    <Playground __position={0} __code={'<ul>\\n  <li>\\n    When you type <b>{\\'{{nickname}}\\'}</b>, will be replaced with <b>Peter</b>\\n  </li>\\n  <li>\\n    When you type <b>{\\'{{product}}\\'}</b>, will be replaced with{\\' \\'}\\n    <b>Product Name</b>\\n  </li>\\n</ul>\\n<ReactTemplateEditor\\n  value=\\\"Dear {{nickname}}, you bought {{product}} at {{date}}\\\"\\n  placeholders={[\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(nickname)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: \\'Peter\\',\\n    },\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(product)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: \\'Product Name\\',\\n    },\\n    {\\n      type: \\'variable\\',\\n      matchRegexp: /^\\\\{\\\\{(date)\\\\}\\\\}/,\\n      className: \\'cm-keyword\\',\\n      text: new Date().toLocaleDateString(),\\n    },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ReactTemplateEditor\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSD2EDSVLBgH0sjPLshVQ9DZXaD0ZglbZXDSOBPUogRJDgARyGkU5WLyZiYAARkLGZEkkABVCo0iErVSMoHACDgLBcIgwjNRok1NXaMFUF0FFjlOLDnAIRIsXYbh2GAdYogEZ5UCudoAAZ2CTGYVL3asGM7ApHIAFnc9gADZ3PaTyLDAYCADFvWgRJHP4ZxDgRB1MBgoR-CWIhqEoOAGIRML1kimhnAgLDLnYIS_M8-RdP0qYAEE5gs9gIyg8gbCgdAw1QjkLLEVroxkdgUTMmBuGAbCTLGuB5C3GtgA66BuuCAAyVbxkSeZKGaJaup67hDrlMBkMlAZUHadgAH4NmWsMIz6q49pW1BaurKQZCrN8zBhdVjhgMAwigKYHv6wb3qa5dqwTIiCBwKLMhSK8CHmmta1CKBUbR2soAgLHsfYAB1TZzFaKFTPmWsPDEYB2mAYBUFibZUG9GB5Hkdp5CkamlhxBJ2ECCcYDJCVc3zPBablN6CbRxhqeg0cMm5_GaykXGVYTdWVwJ4ngjJzbKblmm6eAfsnFCSV2c55XeegKABcpYW4IRHJxclzntexo3oKEdALamAA5Vnlc97cteh1XJAxlXGFhkiyNoCiXiFUP2FYeIGT4EA5NcI56cZnYWaPdmln1rx0UIKzTd9_32ZCSDJqydn-FTkWEWGLqMjgCaAG1U4sayI5lg2KvadP-lcDxfXC4eayiAgOrFNIsBmK5JAAPV4XhrO3iMC-Z1muV4Wrj8kGfZ56OC4DgIOj0c8giHNbYYESEYhXQQqh5l2gsAIRyFdoAIT-F8lD9ysmAiwFNR7jwgJPaeED2Dz0XjAZeq92Aby3jvYAEYzZ-0lEfE-8gz4IPIFfG-rN76P2fq_d-wCL7jGwH_OUPtzaSnYLfGAdDh6gK_mjQe9CR6ORgXAzh59Z5ILwEvGEa9N7b0wRGdAWQCFbyIWI4epD_DkLvnKB-T8X5vwEB_NR39GFXGdGMLUWQHqKUoAAGVOPEGAljaAmWnCkB6xi0Y8OHgAXWltjTcK4pCw3hojZG80pCQy-mYL8IB8pMRYmxZOHEuI8QPPxaSwlRLiSkoJWS8lFLKUAroECBgwJ4T-kYEIdhYaaXlGaP0jwsz4VSqRCAAghBHCNLRH4RB2mdNUi0qC8cRaJ3YtRbp7oPQ4A9IMv6UEGiwVFh3KcEy3R0WmR6VQ2AcAfxVP6RmegBCAxSosgcdh-FpwzhVFEbj9kWDbjAFZXcriLOdk8ygncBA9x8fst6ulfr2hOnpbs5g46kVGTAJOEQBA4POa8lhdw-qXPquwHuJTXBoAyGKMAPiWohLyDAEyViQnkFNLQHFjAAASlg9S2K1GwC8pF9ANg5B-XSFgCVwChWAMAWwCARlBtwAalyLCouyMklq5irAQrgmM5JEYMVYoEDij4fQwwEAAIRLFFTWNALxYFQAAGrXKuGbO4OB05QAZMYx5zyBD3D7OcnAdrPlTjgCueQ7KI4SphSeUcJrrUwAevc1CSwfnevWF0AgfRzAxg4F0MAE0lXOhVQDNCo1YATSgl4QxGRHJCUCnAT5XB2AAGJOwf1QnND6sYzBvVifEwSrFfVCk4txSQ2zcBKWKcBfQDAKn2kcJgPU_SqKTPaL0sdQD9lNMHVMSdgI-kdLbbjDwAJMDLs6R8a-fougAEdQjtODYuzd07JAdhOKgTiZLPlQE4nhLEt6EgeFznAV8s7JDNL-qetpK6OKXuoDeoQCQH2_jgM-qAr6HU7vffs-dVl_qQGdHqQEayMIemypgOZ9oFnQqFDqGYoK7BoQnVs8MuA9m2nmT0clRKGKoDFI85GAc0OkfWR6Ml4oXEMaY-8ljgI_SAoIlxrIzheNO1FgJtK7GMPfDo-J9wfGpP6FY9h_Zukforz-ho6-MqE5QvGYPdYMw3i43IJwVAKJ3AIk1VcYdMBR3_pwPhgQGnqz1TRJKIUirgKYtTVcGldKmXI1JP0dOtA9hEfOo6hornCPEeRRymsqKsPdEspgZDjnARtU9q6r5jrKDReoHAF17z7Ueojl69zaNUW42dITTIcwCgtXaPVmAjXZgzAKJdNAUXiPXXYJqzVRXiM4Ha515rM52BXFRAyGrNYJi2BwGgazel0utKc503zNB_MZB1Z7NLxiJtNe6zOYxEGQNQdztNWAjl8i_i4TWK1DIrijZiytxmMR4iBoZOwAAPv9uUOkquRoOWjJbpWuiPJNRPKe8AQ0rkh-N2wIFHB6BoPYPwM5g3eosP8ry4WsjsFxiiOg6PSlY_cGkUGuq53NAjJq5H72SsfGAld7ISWI5NMgQST7a2EQ4GoI-QIkUuhU5x2FVqAB9EUSwOrU5gH1YV4DudftqyVz5f4oCUHcQrnHihZd45rDzlL2O0gfBs_ORHauazVZXE0gnEO-erYIFboXqBHz67SFLoVIrPbI-h-82HsD4dwBt1443TunVsGJ0H0WIeRHh65xrqzIm6PKYRNJ7oaFLLM-K1ZhbYqStTAPKEZGLVkeu_d6eLUpwI81jL8jf1BAGoJD1LnbYyecBi7PBKPAEZbK7BV7qiwQ-Pjklhcb_HYPnfLdPJYSgz8rPWN7_3iMERl9g1H5wBnm-1obX36gRSW1ujrSHMvnA1nIvn6P1ft3tAyvLLdRkLnqc6tYsr0vug9-sgo-dKGgTKitZsKNBLlC1FBO1vLngLNt_sfiAVMPIIAdjOKhgGAXYJZJAVitAbAZfnQDkEgclkASXn2OVi_kcHnnAb_o_vllOMgangZBItkL9htnftfn-EwegCwUXigSQfHi7ITLiC1KJhSpJlnqpmhldGAiITAJnsyjQGpsGrQftogtEB1MwdcksGwaiAUI9GAoKsrv7rwrwWngwr_C1MoUcOfpYfgP4DqCMKgIihkKZI-D_C-H1FIcYQTBvqfjtKQc_l8opIwhZEdO0Lcj1oNjYW4TNv4e3OQUEb_IPmoZsFwdcmyjEZwdwSQiQbplohtpYewNYWQYEX4HAPYY4QOM4YkF7mQhwq-JEcUVOBPpohwjEZOo_MIvDn6AItGrGrRtxvRkpmIfIQQIoRvowvLrUYfPQdjF6jbqnE3seEPiRIkQgegUsPgesarhfPwdkIIRMKnPbl_P4jPqGtHqZlPLECOAQIvsvsntsSliQUfo6g5ltkKDgLcXQD8i1D8sgaiosZmHni7mnjXqOHXuQA3hYACXDAqHgLYlihGO1tvp7B_s6J8VZpXsCQLn-KePCWiXAeHoiZ_v4CEKgIkByP_jAKxg9NPjWO1uiaVmvh1BvnAWDM8S6nkAPkfmysgUcWjL0QIOYM8WcclhceZtcSwbTiuAKUKViW7uti3uCdYqeJKVHqKWZlcdygQJKWgKZkwuETOCnotnKaCdqPXhSVqTqagHqWqeDn2BqRZtQBLjTt7hVBGLqeEFcAaSkIYaSeSQ8bzsttXgqcLpOubqIq1L6Tvq6RvnziqdcjSbybaesE0mKVcats4e6daZ6SNDoYaQ8abv8acOXi6ECUGSCQqbXuaaGoWTkX0MWhQYZIeMeKePYPWT5sbqbtCaGMMSKIrlmXqfLu2QIEOQ6kKJ2V-m9A2koHEoxM2kkjCu2jxF2rsoUr2hjmUuBC0q8dOnUlOv-n6Fpi0mgIAict0G8gEaspchIlIivFcEvGeCvKGvpCWbeTMFdPeSgo-TMKGlAl6XmSkL-Ywh-bmW4gDq1BGKwP-W4r6d6cbrkRwiBd6X8pps6NpvaCeRkGeY0PFgXhcusPqt9saqaqBQUKGpYbFksnEV8r8esCdl1gUCBV4Fru4M-RnsMdnldDgo0fmo0FRR8l8ksC9jAEhQBUsB6QQKJTBYFrSrYopqgCFvoChQcpgBol0JfJovppCq5g8Z5v7D5imrxUFrYopTQEsCzlZq8rhYlgtmmRZsGQiPZoCG8QIC5uxLZQ6dcQyQ9E5SOtOh8XAbRXaXZRKQmRyNBWReqZcRZpaQmcJRFYaVcKwJQFwB5dFXsKgM6cGq6VcAOTmXBWDEiOFWnClegMpY2nOYkq2ikh2mlmudoCUv2uUmpDuf-nuUutOjhgRBedRasrJrRORmoLsoeQcphccqLI0KhpgOjpALOJchRQijxd8r8vWrpLAFMFQMhIAi1E5O5sJoaKdKCkhlilNdldQLNa8qdTNRAD6bpSQUXBtsUCMnKjAOaK5uaAACTAAADU31m1Ry8gn1wAzif4qAowD08gxQC2rV26mWJ1OWD1SwfuquK4wKZ0zIR-14FIEYty4oRAvljm_lriBQrieNSw7BVwRVAZNY7BlJLUONqIeN1SfpFJ7WOomQpC2uWKMxYurUqKBRfhugs1T-vVXcRpBMEADOuN3oOAEi3Fl5GQstyRb5SwgMUA3K6RxmXhhYphL5R4b5FhS1bOVmr5KCMIAOQONhN5ZtT50hJBnBLU0tRAStC8A-etshNtMwtJBMtNBRlklhMxaMtNmR1yLUnBPcQkK12tMpsRAlTRUCgdqEns0eQdjNMtaFAqs-2MMdqAGMUAvJRBQsMagp1NFgCBxKtAUpxhMdUER-ZUFUmNFI8ufav8ZiedqEMxPCAecBDNpoRA5ND-FUVNO-FgktrUtNdd5UIRlBy-WN3KhRG0TtOA3GimCINJpd2MvtS1LUyEcNzoZVYCwdyRGhQaO94YWWB90do4fRudCQidKdJhBkmaG2E9cB9dvdZNuZSiPB_J19Jdz9ndnqZxxuOdrM5VM5TaVV7ES58mAx8lch2e9VFAfaoEIAZgxgpg5gVS9gdG7AxQeU7gxQhoVE_FwwqyLAeUcEiQRQVSAAAgxJkLKGgKmsZaRTODQ-wPQ7nN6BpdfK0d6TQ7yGhS0mjUdTIfAxxRIZgFmSw7JQlSkJMS0RQmw7dSiiQR9QQ-YBlsWc3jIaZQKmEQxh-usBowxp9rI3Si1MwxkMZaGmPYqlMUeOLewKY-4M0dfPCSiDgJeg40o04yKdWDHa46gOA8oJA3-JoNQOuaUgwJcvwA9fwFcPwD8MWNUBkOaD-GSIyCADPPwKwF3OdIk-wPwE5DgKU05JlOsPwOUGShAAXkU_wA1CNI-t0Jk7AP9GSJQIkLmHkC1qaJKOaCk38KWJU9WPwFEGgA0yoBRv-B6jk1UyAJgPMOGHpBAPAEU7qtU0ZFM-vEJDgAAExlOjNoz8D9OiBIDFMgC7NBQ4AAAcOAQUxzNYyTHV_6OzAArDgH5PcxU_MxHKc5qJaJEDs0JDc_c482g9WFObEqk94MbcLZE6gNE01SANZCALQAZok8k3RuaGc-aF1vwPIAoOzEAA`} mdxType=\"Playground\">\n  <ul>\n    <li>When you type <b>{'{{nickname}}'}</b>, will be replaced with <b>Peter</b></li>\n    <li>When you type <b>{'{{product}}'}</b>, will be replaced with <b>Product Name</b></li>\n  </ul>\n  <ReactTemplateEditor value='Dear {{nickname}}, you bought {{product}} at {{date}}' placeholders={[{\n        type: 'variable',\n        matchRegexp: /^\\{\\{(nickname)\\}\\}/,\n        className: 'cm-keyword',\n        text: 'Peter'\n      }, {\n        type: 'variable',\n        matchRegexp: /^\\{\\{(product)\\}\\}/,\n        className: 'cm-keyword',\n        text: 'Product Name'\n      }, {\n        type: 'variable',\n        matchRegexp: /^\\{\\{(date)\\}\\}/,\n        className: 'cm-keyword',\n        text: new Date().toLocaleDateString()\n      }]} mdxType=\"ReactTemplateEditor\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-code\"\n    }}>{`Basic Code`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { TemplateEditor } from 'template-editor';\n\nconst container = document.getElementById('root');\n\nconst editor = new TemplateEditor(container, {\n  initialValue: 'Dear {{nickname}}...',\n  placeholders: [\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(nickname)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: 'nickname'\n    },\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(product)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: 'product'\n    },\n    {\n      type: 'variable',\n      matchRegexp: /^\\\\{\\\\{(date)\\\\}\\\\}/,\n      className: 'cm-keyword',\n      text: new Date().toLocaleDateString()\n    }\n  ]\n});\n\neditor.onChange = (inpput: string)=>{\n  console.log(input);\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}